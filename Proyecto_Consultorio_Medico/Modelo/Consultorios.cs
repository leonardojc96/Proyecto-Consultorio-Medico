//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proyecto_Consultorio_Medico.Modelo
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Consultorios
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Consultorios()
        {
            this.MedicoConsultorio = new HashSet<MedicoConsultorio>();
            this.Turnos = new HashSet<Turnos>();
        }

        public int Id { get; set; }
        public int Id_Especialidad { get; set; }
        public string Nombre { get; set; }
        public Nullable<bool> HayTurnos { get; set; }

        public virtual Especialidades Especialidades { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MedicoConsultorio> MedicoConsultorio { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Turnos> Turnos { get; set; }

        public bool Save(Consultorios consultorio)
        {
            using (Proyecto_centro_medicoEntities db = new Proyecto_centro_medicoEntities())
            {
                db.Consultorios.Add(consultorio);

                if (db.SaveChanges() == 1)
                {
                    return true;
                }
                return false;
            }
        }

        public ICollection<Consultorios> Get()
        {
            using (Proyecto_centro_medicoEntities db = new Proyecto_centro_medicoEntities())
            {
                return db.Consultorios.ToList();
            }
        }

        public Consultorios Get(int id)
        {
            using (Proyecto_centro_medicoEntities db = new Proyecto_centro_medicoEntities())
            {
                return db.Consultorios.Include("Especialidades").Where(x => x.Id == id).FirstOrDefault();
            }
        }

        public ICollection<Consultorios> GetByEspecialidad(int idEspecialidad)
        {
            using (Proyecto_centro_medicoEntities db = new Proyecto_centro_medicoEntities())
            {
                return db.Consultorios.Where(x => x.Id_Especialidad == idEspecialidad).ToList();
            }
        }

        public Consultorios GetByNumero(string Numero)
        {
            using (Proyecto_centro_medicoEntities db = new Proyecto_centro_medicoEntities())
            {
                return db.Consultorios.Where(x => x.Nombre == Numero).FirstOrDefault();
            }
        }

        public bool Remove(Consultorios consultorio)
        {
            using (Proyecto_centro_medicoEntities db = new Proyecto_centro_medicoEntities())
            {
                db.Consultorios.Remove(consultorio);

                if (db.SaveChanges() == 1)
                {
                    return true;
                }
                return false;
            }
        }

        public bool Update(int id, Consultorios consultorio)
        {
            using (Proyecto_centro_medicoEntities db = new Proyecto_centro_medicoEntities())
            {
                Consultorios p = consultorio.Get(id);

                p = consultorio;

                if (db.SaveChanges() == 1)
                {
                    return true;
                }
                return false;
            }
        }
    }
}
