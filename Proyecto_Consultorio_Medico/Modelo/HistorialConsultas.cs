//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proyecto_Consultorio_Medico.Modelo
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public partial class HistorialConsultas
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public HistorialConsultas()
        {
            this.ConsultaMedica = new HashSet<ConsultaMedica>();
        }
    
        public int Id { get; set; }
        public int Id_Paciente { get; set; }
        public string AntecedentesFliares { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ConsultaMedica> ConsultaMedica { get; set; }
        public virtual Pacientes Pacientes { get; set; }

        public bool Save(HistorialConsultas historial)
        {
            using (Proyecto_centro_medicoEntities db = new Proyecto_centro_medicoEntities())
            {
                db.HistorialConsultas.Add(historial);

                if (db.SaveChanges() == 1)
                {
                    return true;
                }
                return false;
            }
        }

        public ICollection<HistorialConsultas> Get()
        {
            using (Proyecto_centro_medicoEntities db = new Proyecto_centro_medicoEntities())
            {
                return db.HistorialConsultas.ToList();
            }
        }

        public HistorialConsultas Get(int id)
        {
            using (Proyecto_centro_medicoEntities db = new Proyecto_centro_medicoEntities())
            {
                return db.HistorialConsultas.Where(x => x.Id_Paciente == id).FirstOrDefault();
                
            }
        }

        public IEnumerable<dynamic> GetTunosPendientes(int idMedico)
        {
            using (Proyecto_centro_medicoEntities db = new Proyecto_centro_medicoEntities())
            {
                return (from t in db.Turnos
                        join p in db.Pacientes on t.Id_Paciente equals p.Id
                        join h in db.HistorialConsultas on p.Id equals h.Id_Paciente
                        join c in db.ConsultaMedica on t.Id equals c.Id_Turno
                        join m in db.Medicos on c.Id_Medico equals m.Id
                        join mc in db.MedicoConsultorio on m.Id equals mc.Id_Medico
                        where c.Estado == "Pendiente" && (DateTime.Now.Hour >= mc.H_Entrada.Hours && DateTime.Now.Hour <= mc.H_Salida.Hours) && m.Id == idMedico
                        select new { p.Nombre, p.Apellido, p.DNI, c.Estado, c.Id }).ToList();
            }
        }
    }
}
